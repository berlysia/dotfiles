#!/bin/bash

# ~/.claude/CLAUDE.md „ÅÆ„Ç∑„É≥„Éó„É´„Éë„ÉÉ„ÉÅ„Éô„Éº„Çπ„Éû„Éº„Ç∏„Çπ„ÇØ„É™„Éó„Éà
# diff„Å®patch„Ç≥„Éû„É≥„Éâ„ÇíÁõ¥Êé•‰ΩøÁî®„Åó„ÅüËªΩÈáèÂÆüË£Ö

set -euo pipefail

# „Éû„Éº„Ç∏„É¢„Éº„ÉâË®≠ÂÆö
MERGE_MODE="${MERGE_MODE:-AUTO}"

# ‰ΩúÊ•≠Áî®‰∏ÄÊôÇ„Éï„Ç°„Ç§„É´
TEMP_DIR=$(mktemp -d)
EXISTING_FILE="$TEMP_DIR/existing.md"
CHEZMOI_FILE="$TEMP_DIR/chezmoi.md"

# „Ç®„É©„ÉºÊôÇ„ÅÆ„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
cleanup() {
    rm -rf "$TEMP_DIR"
}
trap cleanup EXIT

# Ê®ôÊ∫ñÂÖ•Âäõ„Åã„ÇâÊó¢Â≠ò„ÅÆ„Éï„Ç°„Ç§„É´ÂÜÖÂÆπ„ÇíË™≠„ÅøËæº„Åø
cat > "$EXISTING_FILE"

# chezmoiÁÆ°ÁêÜ„ÅÆCLAUDE.mdË®≠ÂÆö„ÇíË™≠„ÅøËæº„Åø
cat > "$CHEZMOI_FILE" << 'EOF'
{{ includeTemplate "dot_claude/.CLAUDE.md" . }}
EOF

# „Éë„ÉÉ„ÉÅÁîüÊàê
generate_patch() {
    # unified diffÂΩ¢Âºè„Åß„Éë„ÉÉ„ÉÅ„ÇíÁîüÊàê
    if diff -u "$EXISTING_FILE" "$CHEZMOI_FILE" > /dev/null 2>/dev/null; then
        echo "‚úÖ No changes detected between files" >&2
        cat "$EXISTING_FILE"
        return 1
    else
        return 0
    fi
}

# „Ç§„É≥„Çø„É©„ÇØ„ÉÜ„Ç£„ÉñÈÅ©Áî®
apply_patch() {
    case "$MERGE_MODE" in
        "INTERACTIVE")
            echo "Choose action:" >&2
            echo "1) Apply patch (update to chezmoi version)" >&2
            echo "2) Open merge tool" >&2
            echo "3) Keep existing version" >&2
            echo "4) Manual edit" >&2
            echo "" >&2
            
            while true; do
                read -p "Enter choice [1-5]: " choice
                case $choice in
                    1)
                        echo "üì• Applying patch..." >&2
                        cp "$CHEZMOI_FILE" "$EXISTING_FILE"
                        cat "$EXISTING_FILE"
                        return 0
                        ;;
                    2)
                        open_merge_tool
                        return 0
                        ;;
                    3)
                        echo "üìÑ Keeping existing version" >&2
                        cat "$EXISTING_FILE"
                        return 0
                        ;;
                    4)
                        manual_edit
                        return 0
                        ;;
                    *)
                        echo "Invalid choice. Please enter 1-4." >&2
                        ;;
                esac
            done
            ;;
        "AUTO")
            echo "ü§ñ Auto-applying chezmoi version..." >&2
            cp "$CHEZMOI_FILE" "$EXISTING_FILE"
            cat "$EXISTING_FILE"
            ;;
        "FORCE")
            echo "üí™ Force-applying chezmoi version..." >&2
            cp "$CHEZMOI_FILE" "$EXISTING_FILE"
            cat "$EXISTING_FILE"
            ;;
    esac
}

# „Éû„Éº„Ç∏„ÉÑ„Éº„É´„ÇíÈñã„Åè
open_merge_tool() {
    if command -v code >/dev/null 2>&1; then
        echo "üõ†Ô∏è  Opening VS Code merge editor..." >&2
        # 3„Éï„Ç°„Ç§„É´ÊØîËºÉ: existing, chezmoi, (output will be existing)
        code --diff "$EXISTING_FILE" "$CHEZMOI_FILE" --wait
        cat "$EXISTING_FILE"
    elif command -v vimdiff >/dev/null 2>&1; then
        echo "üõ†Ô∏è  Opening vimdiff..." >&2
        vimdiff "$EXISTING_FILE" "$CHEZMOI_FILE"
        cat "$EXISTING_FILE"
    elif command -v meld >/dev/null 2>&1; then
        echo "üõ†Ô∏è  Opening Meld..." >&2
        meld "$EXISTING_FILE" "$CHEZMOI_FILE"
        cat "$EXISTING_FILE"
    else
        echo "‚ùå No suitable merge tool found" >&2
        echo "Available files for manual editing:" >&2
        echo "  Existing: $EXISTING_FILE" >&2
        echo "  Chezmoi:  $CHEZMOI_FILE" >&2
        read -p "Press Enter after manual editing..."
        cat "$EXISTING_FILE"
    fi
}

# ÊâãÂãïÁ∑®ÈõÜ
manual_edit() {
    local editor="${EDITOR:-nano}"
    echo "‚úèÔ∏è  Opening editor ($editor)..." >&2
    echo "Files available:" >&2
    echo "  Current: $EXISTING_FILE" >&2
    echo "  Target:  $CHEZMOI_FILE" >&2
    echo "" >&2
    
    $editor "$EXISTING_FILE"
    cat "$EXISTING_FILE"
}

# „É°„Ç§„É≥Âá¶ÁêÜ
main() {
    if generate_patch; then
        apply_patch
    fi
}

main