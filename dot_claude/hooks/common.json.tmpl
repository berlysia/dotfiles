{{- /* Detect current git branch to determine which hook implementation to use */ -}}
{{- $gitBranch := "" -}}
{{- if stat (joinPath .chezmoi.sourceDir ".git") -}}
  {{- $gitBranch = output "git" "-C" .chezmoi.sourceDir "rev-parse" "--abbrev-ref" "HEAD" | trim -}}
{{- end -}}

{{- /* Use cc-hooks-ts implementation on migrate-to-cc-hooks-ts branch */ -}}
{{- if eq $gitBranch "migrate-to-cc-hooks-ts" -}}
{
  "PreToolUse": [
    {
      "matcher": "",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/auto-approve.ts"
        }
      ]
    },
    {
      "matcher": "(Read|Write|Edit|MultiEdit|NotebookRead|NotebookEdit|LS|Glob|Grep|Bash)",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/deny-repository-outside.ts"
        }
      ]
    },
    {
      "matcher": "Bash",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/block-tsx.ts"
        }
      ]
    },
    {
      "matcher": "(Write|Edit|MultiEdit|NotebookEdit)",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/deny-node-modules.ts"
        }
      ]
    },
    {
      "matcher": "(Write|Edit|MultiEdit)",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/block-package-json-tsx.ts"
        }
      ]
    },
    {
      "matcher": "(WebFetch|Fetch).*github\\.com",
      "hooks": [
        {
          "type": "command",
          "command": "echo 'Use \"gh\" CLI for GitHub requests instead of Fetch/WebFetch. Example: gh api repos/owner/repo'; exit 2"
        }
      ]
    },
    {
      "matcher": "(WebFetch|Fetch).*https?://",
      "hooks": [
        {
          "type": "command",
          "command": "echo 'Consider using \"mcp__readability__read_url_content_as_markdown\" for better web content extraction. If MCP is unavailable, you can proceed with WebFetch.'; exit 2"
        }
      ]
    }
  ],
  "PostToolUse": [
    {
      "matcher": "",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/command-logger.ts"
        }
      ]
    },
    {
      "matcher": "",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/auto-format.ts"
        }
      ]
    }
  ],
  "SessionStart": [
    {
      "matcher": "",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/session.ts"
        }
      ]
    }
  ],
  "Stop": [
    {
      "matcher": "",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/notification.ts"
        }
      ]
    }
  ],
  "Notification": [
    {
      "matcher": "",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/notification.ts"
        }
      ]
    }
  ],
  "UserPromptSubmit": [
    {
      "matcher": "",
      "hooks": [
        {
          "type": "command",
          "command": "bun {{ .chezmoi.sourceDir }}/dot_claude/hooks/scripts/user-prompt-logger.ts"
        }
      ]
    }
  ]
}
{{- else -}}
{
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "cat | bash '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/send-notification.sh' Notification"
          },
          {
            "type": "command",
            "command": "cat | bash '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/speak-notification.sh' Notification"
          },
          {
            "type": "command",
            "command": "awk '{print}' >> '{{ .chezmoi.homeDir }}/.config/claude-companion/logs/hooks.jsonl'"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "bash '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/send-notification.sh' Stop"
          },
          {
            "type": "command",
            "command": "bash '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/speak-notification.sh' Stop"
          },
          {
            "type": "command",
            "command": "awk '{print}' >> '{{ .chezmoi.homeDir }}/.config/claude-companion/logs/hooks.jsonl'"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "cat | bun '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/auto-approve-commands.ts'"
          },
          {
            "type": "command",
            "command": "awk '{print}' >> '{{ .chezmoi.homeDir }}/.config/claude-companion/logs/hooks.jsonl'"
          }
        ]
      },
      {
        "matcher": "(Read|Write|Edit|MultiEdit|NotebookRead|NotebookEdit|LS|Glob|Grep|Bash)",
        "hooks": [
          {
            "type": "command",
            "command": "bun '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/deny-repository-outside-access.ts'"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "cat | bun '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/block-tsx-tsnode.ts'"
          }
        ]
      },
      {
        "matcher": "(Write|Edit|MultiEdit|NotebookEdit)",
        "hooks": [
          {
            "type": "command",
            "command": "cat | bun '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/deny-node-modules-write.ts'"
          }
        ]
      },
      {
        "matcher": "(Write|Edit|MultiEdit)",
        "hooks": [
          {
            "type": "command",
            "command": "cat | bun '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/block-tsx-package-json.ts'"
          }
        ]
      },
      {
        "matcher": "(WebFetch|Fetch).*github\\.com",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'Use \"gh\" CLI for GitHub requests instead of Fetch/WebFetch. Example: gh api repos/owner/repo'; exit 2"
          }
        ]
      },
      {
        "matcher": "(WebFetch|Fetch).*https?://",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'Consider using \"mcp__readability__read_url_content_as_markdown\" for better web content extraction. If MCP is unavailable, you can proceed with WebFetch.'; exit 2"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "awk '{print}' >> '{{ .chezmoi.homeDir }}/.config/claude-companion/logs/hooks.jsonl'"
          }
        ]
      },
      {
        "matcher": "(Edit|MultiEdit|Write)",
        "hooks": [
          {
            "type": "command",
            "command": "bash '{{ .chezmoi.homeDir }}/.claude/hooks/scripts/auto-format.sh'"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"[$(date '+%F %H:%M:%S')] $USER [$(pwd)]: $(jq -r '.tool_input.command' | sed 's/$/\\\\n/' | tr -d '\\n')\" >> ~/.claude/command_history.log"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "awk '{print}' >> '{{ .chezmoi.homeDir }}/.config/claude-companion/logs/hooks.jsonl'"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "awk '{print}' >> '{{ .chezmoi.homeDir }}/.config/claude-companion/logs/hooks.jsonl'"
          }
        ]
      }
    ]
  }
{{- end -}}