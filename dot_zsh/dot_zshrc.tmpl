if [ "$ZSHRC_PROFILE" != "" ]; then
  zmodload zsh/zprof && zprof > /dev/null
fi

function zsh-profiler() {
  ZSHRC_PROFILE=1 zsh -i -c zprof
}

setopt IGNOREEOF

autoload -Uz colors
colors

autoload -Uz compinit
compinit

bindkey -e

bindkey "^[[3~" delete-char
bindkey "^?" backward-delete-char
bindkey ";5D" backward-word
bindkey ";5C" forward-word

autoload -Uz select-word-style
select-word-style default
zstyle ':zle:*' word-chars ' /=;@:{}[]()<>,|.'
zstyle ':zle:*' word-style unspecified

setopt share_history
setopt histignorealldups

HISTFILE=$ZDOTDIR/.zsh_history
HISTSIZE=2000
SAVEHIST=2000

source $ZDOTDIR/path.zsh

source $ZDOTDIR/prompt.zsh

{{ if eq .chezmoi.os "darwin" -}}
  if [ -e $ZDOTDIR/darwin.zsh ]; then
    source $ZDOTDIR/darwin.zsh
  fi
{{ else if eq .chezmoi.os "linux" -}}
  if [ -e $ZDOTDIR/linux.zsh ]; then
    source $ZDOTDIR/linux.zsh
  fi
  {{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}
    eval "$($HOME/.local/bin/wsl2-ssh-agent)"
    export BROWSER=wslview
  {{ end -}}
{{ else if eq .chezmoi.os "windows" -}}
  if [ -e $ZDOTDIR/windows.zsh ]; then
    source $ZDOTDIR/windows.zsh
  fi
{{ end -}}

eval "$(~/.local/bin/mise activate zsh)"

export FZF_DEFAULT_OPTS="--height=50% --layout=reverse --info=inline --border --padding=1"

if type fzf &> /dev/null; then
  source <(fzf --zsh)
fi

if type fzf &> /dev/null; then
  function fzf-history-selection() {
    local selected=""

    if [[ -n "$LBUFFER" ]]; then
      selected=`history 0 | fzf --query $LBUFFER | awk '{ $1=""; sub(/^[ \t]+/, ""); print }'`
    else
      selected=`history 0 | fzf | awk '{ $1=""; sub(/^[ \t]+/, ""); print }'`
    fi

    BUFFER=`[ ${#selected} -gt 0 ] && echo $selected || echo $BUFFER`
    CURSOR=$#BUFFER
    zle reset-prompt
  }

  zle -N fzf-history-selection
  bindkey '^R' fzf-history-selection
fi

if type fzf &> /dev/null && [ -f ~/.zsh/functions/fzf-tab-completion.zsh ]; then
  source ~/.zsh/functions/fzf-tab-completion.zsh
  bindkey '^I' fzf_completion
fi

if type code &> /dev/null; then
  export EDITOR="code --wait"
elif type emacs &> /dev/null; then
  export EDITOR=emacs
fi

if type opam &> /dev/null; then
  eval `opam env`
fi

if type mise &> /dev/null && mise list | grep python > /dev/null && type gcloud &> /dev/null; then
  export CLOUDSDK_PYTHON=`mise which python`
fi

[ -f "$ZDOTDIR/ni.zsh" ] && source $ZDOTDIR/ni.zsh

echo -ne "\033]0;$(basename $PWD)\007"
function chpwd() {
  echo -ne "\033]0;$(basename $PWD)\007"
}

if [ -e $HOME/.zshrc.local ]; then
    source $HOME/.zshrc.local
fi

[[ "$TERM_PROGRAM" == "vscode" ]] && . "$(code --locate-shell-integration-path zsh)"

:
