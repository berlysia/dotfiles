#!/usr/bin/env bash
# Fix trailing commas in JSON files
# This script removes trailing commas from JSON files to make them valid

set -euo pipefail

echo "🔧 Fixing trailing commas in JSON files..."

# Function to fix trailing commas
fix_trailing_commas() {
    local file="$1"
    local temp_file="${file}.tmp"
    local name="$(basename "$file")"
    
    if [ ! -f "$file" ]; then
        echo "⚠️  $name: File not found"
        return 1
    fi
    
    # First check if already valid
    if jq empty "$file" 2>/dev/null; then
        echo "✅ $name: Already valid"
        return 0
    fi
    
    echo "🔧 $name: Attempting to fix..."
    
    # Create backup
    cp "$file" "${file}.bak"
    
    # Remove trailing commas before ] or }
    sed -E 's/,([[:space:]]*[}\]])/\1/g' "$file" > "$temp_file"
    
    # Check if the fix worked
    if jq empty "$temp_file" 2>/dev/null; then
        mv "$temp_file" "$file"
        echo "✅ $name: Fixed trailing commas"
        rm -f "${file}.bak"
        return 0
    else
        # If still broken, restore backup
        rm -f "$temp_file"
        mv "${file}.bak" "$file"
        echo "❌ $name: Could not auto-fix"
        
        # Show error for manual fix
        echo "   Error details:"
        jq empty "$file" 2>&1 | sed 's/^/   /'
        
        return 1
    fi
}

# Find and fix all JSON files in .claude directory
while IFS= read -r json_file; do
    fix_trailing_commas "$json_file"
done < <(find "$HOME/.claude" -name "*.json" -type f 2>/dev/null || true)

# Also fix ~/.claude.json if it exists
if [ -f "$HOME/.claude.json" ]; then
    fix_trailing_commas "$HOME/.claude.json"
fi

echo -e "\n💡 Tip: To regenerate from templates, run:"
echo "   chezmoi apply"