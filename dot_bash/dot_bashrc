# .bashrc - Executed for interactive non-login shells

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Set BASH_DIR to the location of bash configuration files
BASH_DIR="$HOME/.bash"

# History settings
HISTCONTROL=ignoreboth:erasedups  # Equivalent to zsh's histignorealldups
HISTSIZE=2000
HISTFILESIZE=2000
shopt -s histappend              # Append to history file

# Check the window size after each command
shopt -s checkwinsize

# Make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Enable programmable completion features
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Load common settings
if [ -z "$SHELL_COMMON" ]; then
  SHELL_COMMON="$HOME/.shell_common"
fi
[ -f "$SHELL_COMMON/init.sh" ] && source "$SHELL_COMMON/init.sh"

# Load bash-specific prompt (fallback if Starship is not available)
if [ "$HAS_STARSHIP" = "1" ]; then
  eval "$(starship init bash)"
elif [ -f "$BASH_DIR/prompt.bash" ]; then
  . "$BASH_DIR/prompt.bash"
fi

# Terminal title (if not already set by common init)
if [[ "$PROMPT_COMMAND" != *"echo -ne"* ]]; then
  PROMPT_COMMAND='echo -ne "\033]0;$(basename "$PWD")\007"'
fi

# Source local configuration if it exists
if [ -f "$HOME/.bashrc.local" ]; then
    . "$HOME/.bashrc.local"
fi

# VSCode shell integration
if [ "$TERM_PROGRAM" = "vscode" ]; then
  if [[ "$TERM_PROGRAM_VERSION" == *-insider ]]; then
    . "$(code-insiders --locate-shell-integration-path bash)"
  else
    . "$(code --locate-shell-integration-path bash)"
  fi
fi
