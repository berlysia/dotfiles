# .bashrc - Executed for interactive non-login shells

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Set BASH_DIR to the location of bash configuration files
BASH_DIR="$HOME/.bash"

# History settings
HISTCONTROL=ignoreboth:erasedups  # Equivalent to zsh's histignorealldups
HISTSIZE=2000
HISTFILESIZE=2000
shopt -s histappend              # Append to history file

# Check the window size after each command
shopt -s checkwinsize

# Make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Enable programmable completion features
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Source path configuration
if [ -f "$BASH_DIR/path.bash" ]; then
    . "$BASH_DIR/path.bash"
fi

# Source prompt configuration
if [ -f "$BASH_DIR/prompt.bash" ]; then
    . "$BASH_DIR/prompt.bash"
fi

# Source OS-specific configuration
case "$(uname -s)" in
    Darwin*)
        # macOS
        if [ -f "$BASH_DIR/darwin.bash" ]; then
            . "$BASH_DIR/darwin.bash"
        fi
        ;;
    Linux*)
        # Linux
        if [ -f "$BASH_DIR/linux.bash" ]; then
            . "$BASH_DIR/linux.bash"
        fi
        # Check for WSL
        if grep -q microsoft /proc/version 2>/dev/null; then
            if [ -f "$HOME/.local/bin/wsl2-ssh-agent" ]; then
                eval "$($HOME/.local/bin/wsl2-ssh-agent)"
            fi
            export BROWSER=wslview
        fi
        ;;
    MINGW*|MSYS*|CYGWIN*)
        # Windows
        if [ -f "$BASH_DIR/windows.bash" ]; then
            . "$BASH_DIR/windows.bash"
        fi
        ;;
esac

# mise activation (equivalent to zsh version)
if [ -f "$HOME/.local/bin/mise" ]; then
    eval "$($HOME/.local/bin/mise activate bash)"
fi

# FZF configuration
export FZF_DEFAULT_OPTS="--height=50% --layout=reverse --info=inline --border --padding=1"

# FZF integration
if type fzf &>/dev/null; then
    # Source fzf bash completion and key bindings if available
    if [ -f ~/.fzf.bash ]; then
        source ~/.fzf.bash
    elif [ -f /usr/share/doc/fzf/examples/key-bindings.bash ]; then
        source /usr/share/doc/fzf/examples/key-bindings.bash
    fi
fi

# Editor configuration
if type code &>/dev/null; then
    export EDITOR="code --wait"
elif type emacs &>/dev/null; then
    export EDITOR=emacs
fi

# opam configuration
if type opam &>/dev/null; then
    eval "$(opam env)"
fi

# gcloud configuration with mise python
if type mise &>/dev/null && mise list | grep python >/dev/null && type gcloud &>/dev/null; then
    export CLOUDSDK_PYTHON="$(mise which python)"
fi

# Set terminal title to current directory
PROMPT_COMMAND='echo -ne "\033]0;$(basename "$PWD")\007"'

# Source local configuration if it exists
if [ -f "$HOME/.bashrc.local" ]; then
    . "$HOME/.bashrc.local"
fi

# VSCode shell integration
if [ "$TERM_PROGRAM" = "vscode" ]; then
    . "$(code --locate-shell-integration-path bash)"
fi
