{{ if eq .chezmoi.os "windows" -}}
# Go tools installation on Windows

$ErrorActionPreference = "Stop"

function Write-Log {
    param([string]$Message, [string]$Level = "INFO")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "[$timestamp] [$Level] $Message"
}

# Activate mise environment to make Go available
if (Get-Command mise -ErrorAction SilentlyContinue) {
    try {
        # Use the correct PowerShell activation method
        (& mise activate pwsh) | Out-String | Invoke-Expression
        Write-Log "Activated mise environment"
    } catch {
        Write-Log "Failed to activate mise environment: $($_.Exception.Message)" "WARNING"
    }
}

# Check if Go is installed
try {
    $null = & go version 2>$null
    if ($LASTEXITCODE -ne 0) {
        throw "Go command failed"
    }
} catch {
    Write-Log "Go not found. Please install Go first (available via mise or winget)." "ERROR"
    exit 1
}

# Set up Go environment
$goPath = $env:GOPATH
if (-not $goPath) {
    $goPath = "$env:USERPROFILE\go"
    $env:GOPATH = $goPath
}

$goBin = "$goPath\bin"
if (!(Test-Path $goBin)) {
    New-Item -ItemType Directory -Path $goBin -Force | Out-Null
}

# Add GOPATH/bin to PATH if not already there
$userPath = [Environment]::GetEnvironmentVariable("PATH", "User")
if ($userPath -notlike "*$goBin*") {
    $newPath = "$userPath;$goBin"
    [Environment]::SetEnvironmentVariable("PATH", $newPath, "User")
    $env:PATH = "$env:PATH;$goBin"
    Write-Log "Added $goBin to PATH"
}

# Install Go tools
$tools = @(
{{- range $index, $tool := .packages.go }}
    "{{ $tool }}"{{ if ne $index (sub (len $.packages.go) 1) }},{{ end }}
{{- end }}
)

foreach ($tool in $tools) {
    $toolName = (($tool -split '/')[-1] -split '@')[0]
    
    # Check if tool is already installed
    try {
        $null = & $toolName --version 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Log "$toolName already installed"
            continue
        }
    } catch {
        # Tool not found, proceed with installation
    }
    
    Write-Log "Installing $tool..."
    try {
        & go install $tool
        if ($LASTEXITCODE -eq 0) {
            Write-Log "Successfully installed $tool" "SUCCESS"
        } else {
            Write-Log "Failed to install $tool" "ERROR"
        }
    } catch {
        Write-Log "Error installing $tool`: $($_.Exception.Message)" "ERROR"
    }
}

Write-Log "Go tools installation completed"
{{ end -}}